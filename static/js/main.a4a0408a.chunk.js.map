{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","ERRORBOUNDRY.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,yBAAKC,UAAY,uDACd,yBAAKC,IAAM,SAASC,IAAG,+BAA4BH,EAA5B,cACvB,6BACI,gCAAMF,GACN,+BAAKC,EAAL,QCiBAK,EAtBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIhB,OACI,6BAEOA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACA,kBAAC,EAAD,CACIC,IAAOD,EACPR,GAAMK,EAAOG,GAAGR,GAChBF,KAAQO,EAAOG,GAAGV,KAClBC,MAASM,EAAOG,GAAGT,aCCxBW,EAfG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,yBAAKX,UAAY,OACb,2BACAA,UAAY,mCACZY,KAAO,SACPC,YAAc,gBACdC,SAAaH,MCCVI,EARA,SAACC,GACZ,OACI,yBAAKC,MAAS,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UACjEJ,EAAMK,WCiBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,wDAEJG,KAAKX,MAAMK,a,GAhBCQ,aCkDZC,G,wDA1Cb,aAAc,IAAD,8BACX,gBAeFC,eAAiB,SAACC,GAChB,EAAKJ,SAAU,CAAElB,YAAasB,EAAMC,OAAOC,SAf3C,EAAKX,MAAQ,CACXnB,OAAQ,GACRM,YAAa,IAJJ,E,qDAUb,WAAoB,IAAD,OACnByB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAAExB,OAAQmC,S,oBAQ1C,WACE,MAA+BZ,KAAKJ,MAA5BnB,EAAR,EAAQA,OAAQM,EAAhB,EAAgBA,YACV8B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACnC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAEvD,OAAQvC,EAAOyC,OAGX,yBAAK7C,UAAY,MACf,wBAAIA,UAAY,MAAhB,iBACA,kBAAC,EAAD,CAAWW,aAAgBgB,KAAKI,iBAChC,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAU3B,OAAUoC,OAP5B,6C,GA7BYX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SAKhDX,K","file":"static/js/main.a4a0408a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return(\r\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n           <img alt = 'robots' src = {`https://robohash.org/${id}?100x100`}/>\r\n           <div>\r\n               <h2> {name }</h2>\r\n               <p> {email} </p>\r\n           </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = ( {robots} ) => {\r\n    // if(true) {\r\n    //     throw new Error('NOOOOO');\r\n    // }\r\n    return (\r\n        <div>\r\n           {\r\n               robots.map((user, i)=> {\r\n                return (\r\n                <Card \r\n                    key ={ i} \r\n                    id = {robots[i].id} \r\n                    name = {robots[i].name} \r\n                    email = {robots[i].email}\r\n                    />\r\n                    )\r\n                })\r\n           }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className = 'pa2'>\r\n            <input \r\n            className = 'pa3 ba b--green bg-lightest-blue'\r\n            type = 'search' \r\n            placeholder = 'Search Robots'\r\n            onChange = { searchChange }\r\n            ></input>\r\n           \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style = {{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1> Ooops, that is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox  from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from \"../ERRORBOUNDRY.js\";\r\nimport'./App.css';\r\n\r\n//declaring a class \r\nclass App extends Component {\r\n  // declare the state \r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      robots: [], \r\n      searchfield: ''\r\n    } \r\n    // End of constructor \r\n  }\r\n\r\n  // Mount Component \r\n  componentDidMount(){\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => {this.setState({ robots: users })});\r\n  }\r\n  // this helps filter the search\r\n  onSearchChange = (event) => {\r\n    this.setState ({ searchfield: event.target.value })\r\n  }\r\n\r\n  // start pf render \r\n  render() {\r\n    const { robots, searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    return !robots.length? \r\n      <h1> Loading </h1>:\r\n      (\r\n        <div className = 'tc'>\r\n          <h1 className = 'f1'> RoboFriends </h1>\r\n          <SearchBox searchChange = {this.onSearchChange}/>\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots = {filteredRobots}/>\r\n            </ErrorBoundry>\r\n            </Scroll>\r\n        </div>\r\n      ); \r\n    } \r\n    }\r\n  // End fo Render\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n// HERE IS WHERE YOU MAKE THE COMPONENTS OF THE WEBSITE \nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}